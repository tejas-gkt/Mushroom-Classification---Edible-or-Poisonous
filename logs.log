2024-10-08 09:37:02,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:37:02,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:37:02,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:37:02,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:46:28,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:46:28,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:46:28,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:46:28,972:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-08 09:47:17,859:INFO:PyCaret ClassificationExperiment
2024-10-08 09:47:17,859:INFO:Logging name: clf-default-name
2024-10-08 09:47:17,860:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-08 09:47:17,860:INFO:version 3.3.2
2024-10-08 09:47:17,861:INFO:Initializing setup()
2024-10-08 09:47:17,861:INFO:self.USI: 64bb
2024-10-08 09:47:17,862:INFO:self._variable_keys: {'gpu_n_jobs_param', 'log_plots_param', 'target_param', 'fold_shuffle_param', 'y_test', 'fix_imbalance', 'X_test', 'data', 'pipeline', 'y_train', 'y', 'X_train', 'n_jobs_param', 'gpu_param', 'USI', 'html_param', 'logging_param', 'seed', 'fold_generator', 'exp_name_log', 'memory', '_ml_usecase', 'X', 'fold_groups_param', 'is_multiclass', 'idx', 'exp_id', '_available_plots'}
2024-10-08 09:47:17,863:INFO:Checking environment
2024-10-08 09:47:17,863:INFO:python_version: 3.11.5
2024-10-08 09:47:17,863:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-10-08 09:47:17,863:INFO:machine: AMD64
2024-10-08 09:47:17,864:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-08 09:47:17,864:INFO:Memory: svmem(total=8472920064, available=1139011584, percent=86.6, used=7333908480, free=1139011584)
2024-10-08 09:47:17,864:INFO:Physical Core: 2
2024-10-08 09:47:17,864:INFO:Logical Core: 4
2024-10-08 09:47:17,865:INFO:Checking libraries
2024-10-08 09:47:17,865:INFO:System:
2024-10-08 09:47:17,865:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-10-08 09:47:17,866:INFO:executable: C:\Users\tejas\anaconda3\python.exe
2024-10-08 09:47:17,866:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-08 09:47:17,866:INFO:PyCaret required dependencies:
2024-10-08 09:47:29,426:INFO:                 pip: 23.2.1
2024-10-08 09:47:29,426:INFO:          setuptools: 68.0.0
2024-10-08 09:47:29,427:INFO:             pycaret: 3.3.2
2024-10-08 09:47:29,427:INFO:             IPython: 8.15.0
2024-10-08 09:47:29,427:INFO:          ipywidgets: 8.0.4
2024-10-08 09:47:29,427:INFO:                tqdm: 4.65.0
2024-10-08 09:47:29,428:INFO:               numpy: 1.24.3
2024-10-08 09:47:29,428:INFO:              pandas: 2.0.3
2024-10-08 09:47:29,428:INFO:              jinja2: 3.1.2
2024-10-08 09:47:29,428:INFO:               scipy: 1.11.1
2024-10-08 09:47:29,429:INFO:              joblib: 1.2.0
2024-10-08 09:47:29,429:INFO:             sklearn: 1.4.2
2024-10-08 09:47:29,429:INFO:                pyod: 2.0.1
2024-10-08 09:47:29,429:INFO:            imblearn: 0.12.3
2024-10-08 09:47:29,430:INFO:   category_encoders: 2.6.3
2024-10-08 09:47:29,430:INFO:            lightgbm: 4.4.0
2024-10-08 09:47:29,430:INFO:               numba: 0.57.1
2024-10-08 09:47:29,431:INFO:            requests: 2.31.0
2024-10-08 09:47:29,431:INFO:          matplotlib: 3.7.2
2024-10-08 09:47:29,431:INFO:          scikitplot: 0.3.7
2024-10-08 09:47:29,431:INFO:         yellowbrick: 1.5
2024-10-08 09:47:29,432:INFO:              plotly: 5.22.0
2024-10-08 09:47:29,432:INFO:    plotly-resampler: Not installed
2024-10-08 09:47:29,432:INFO:             kaleido: 0.2.1
2024-10-08 09:47:29,433:INFO:           schemdraw: 0.15
2024-10-08 09:47:29,433:INFO:         statsmodels: 0.14.0
2024-10-08 09:47:29,433:INFO:              sktime: 0.26.0
2024-10-08 09:47:29,433:INFO:               tbats: 1.1.3
2024-10-08 09:47:29,434:INFO:            pmdarima: 2.0.4
2024-10-08 09:47:29,434:INFO:              psutil: 5.9.0
2024-10-08 09:47:29,434:INFO:          markupsafe: 2.1.1
2024-10-08 09:47:29,434:INFO:             pickle5: Not installed
2024-10-08 09:47:29,434:INFO:         cloudpickle: 2.2.1
2024-10-08 09:47:29,435:INFO:         deprecation: 2.1.0
2024-10-08 09:47:29,435:INFO:              xxhash: 2.0.2
2024-10-08 09:47:29,435:INFO:           wurlitzer: Not installed
2024-10-08 09:47:29,435:INFO:PyCaret optional dependencies:
2024-10-08 09:47:29,503:INFO:                shap: Not installed
2024-10-08 09:47:29,503:INFO:           interpret: Not installed
2024-10-08 09:47:29,504:INFO:                umap: Not installed
2024-10-08 09:47:29,504:INFO:     ydata_profiling: Not installed
2024-10-08 09:47:29,504:INFO:  explainerdashboard: Not installed
2024-10-08 09:47:29,504:INFO:             autoviz: Not installed
2024-10-08 09:47:29,504:INFO:           fairlearn: Not installed
2024-10-08 09:47:29,504:INFO:          deepchecks: Not installed
2024-10-08 09:47:29,505:INFO:             xgboost: Not installed
2024-10-08 09:47:29,505:INFO:            catboost: Not installed
2024-10-08 09:47:29,505:INFO:              kmodes: Not installed
2024-10-08 09:47:29,505:INFO:             mlxtend: 0.23.1
2024-10-08 09:47:29,505:INFO:       statsforecast: Not installed
2024-10-08 09:47:29,505:INFO:        tune_sklearn: Not installed
2024-10-08 09:47:29,505:INFO:                 ray: Not installed
2024-10-08 09:47:29,506:INFO:            hyperopt: Not installed
2024-10-08 09:47:29,506:INFO:              optuna: Not installed
2024-10-08 09:47:29,506:INFO:               skopt: Not installed
2024-10-08 09:47:29,506:INFO:              mlflow: Not installed
2024-10-08 09:47:29,506:INFO:              gradio: Not installed
2024-10-08 09:47:29,506:INFO:             fastapi: Not installed
2024-10-08 09:47:29,506:INFO:             uvicorn: Not installed
2024-10-08 09:47:29,507:INFO:              m2cgen: Not installed
2024-10-08 09:47:29,507:INFO:           evidently: Not installed
2024-10-08 09:47:29,507:INFO:               fugue: Not installed
2024-10-08 09:47:29,507:INFO:           streamlit: Not installed
2024-10-08 09:47:29,507:INFO:             prophet: Not installed
2024-10-08 09:47:29,507:INFO:None
2024-10-08 09:47:29,507:INFO:Set up data.
2024-10-08 09:47:29,967:INFO:Set up folding strategy.
2024-10-08 09:47:29,967:INFO:Set up train/test split.
2024-10-08 09:47:30,250:INFO:Set up index.
2024-10-08 09:47:30,270:INFO:Assigning column types.
2024-10-08 09:47:30,313:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-08 09:47:30,402:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-08 09:47:30,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-08 09:47:30,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:30,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:30,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-08 09:47:30,858:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-08 09:47:30,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:30,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:30,893:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-08 09:47:30,955:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-08 09:47:30,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:30,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-08 09:47:31,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,093:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-08 09:47:31,194:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:31,418:INFO:Preparing preprocessing pipeline...
2024-10-08 09:47:31,428:INFO:Set up label encoding.
2024-10-08 09:47:31,428:INFO:Set up simple imputation.
2024-10-08 09:47:31,496:INFO:Set up encoding of ordinal features.
2024-10-08 09:47:31,522:INFO:Set up encoding of categorical features.
2024-10-08 09:47:31,527:INFO:Set up column name cleaning.
2024-10-08 09:47:35,790:INFO:Finished creating preprocessing pipeline.
2024-10-08 09:47:35,841:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\tejas\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['cap-diameter', 'stem-height',
                                             'stem-width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                    'stem-color',
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'habitat',
                                                                    'season'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-08 09:47:35,841:INFO:Creating final display dataframe.
2024-10-08 09:47:39,398:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type            Binary
3                Target mapping        e: 0, p: 1
4           Original data shape       (61069, 21)
5        Transformed data shape      (61069, 118)
6   Transformed train set shape      (42748, 118)
7    Transformed test set shape      (18321, 118)
8              Numeric features                 3
9          Categorical features                17
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              64bb
2024-10-08 09:47:39,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:39,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:39,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:39,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-08 09:47:39,730:INFO:setup() successfully completed in 22.05s...............
2024-10-08 09:47:39,730:INFO:Initializing compare_models()
2024-10-08 09:47:39,730:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-08 09:47:39,730:INFO:Checking exceptions
2024-10-08 09:47:39,742:INFO:Preparing display monitor
2024-10-08 09:47:39,777:INFO:Initializing Logistic Regression
2024-10-08 09:47:39,777:INFO:Total runtime is 0.0 minutes
2024-10-08 09:47:39,791:INFO:SubProcess create_model() called ==================================
2024-10-08 09:47:39,792:INFO:Initializing create_model()
2024-10-08 09:47:39,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:47:39,794:INFO:Checking exceptions
2024-10-08 09:47:39,794:INFO:Importing libraries
2024-10-08 09:47:39,794:INFO:Copying training dataset
2024-10-08 09:47:39,847:INFO:Defining folds
2024-10-08 09:47:39,847:INFO:Declaring metric variables
2024-10-08 09:47:39,858:INFO:Importing untrained model
2024-10-08 09:47:39,870:INFO:Logistic Regression Imported successfully
2024-10-08 09:47:39,898:INFO:Starting cross validation
2024-10-08 09:47:39,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:48:18,200:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:18,205:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:18,434:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:18,445:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:18,534:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:18,548:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:19,111:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:19,149:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:19,181:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:19,219:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:19,253:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:19,290:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:42,347:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:42,487:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:42,735:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,507:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,602:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,704:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,741:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,827:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,853:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,901:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:43,935:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:48:44,012:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:01,031:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:01,238:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:01,414:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:01,899:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:01,958:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:02,009:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:02,081:INFO:Calculating mean and std
2024-10-08 09:49:02,084:INFO:Creating metrics dataframe
2024-10-08 09:49:02,200:INFO:Uploading results into container
2024-10-08 09:49:02,212:INFO:Uploading model into container now
2024-10-08 09:49:02,216:INFO:_master_model_container: 1
2024-10-08 09:49:02,218:INFO:_display_container: 2
2024-10-08 09:49:02,221:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-08 09:49:02,221:INFO:create_model() successfully completed......................................
2024-10-08 09:49:02,433:INFO:SubProcess create_model() end ==================================
2024-10-08 09:49:02,433:INFO:Creating metrics dataframe
2024-10-08 09:49:02,457:INFO:Initializing K Neighbors Classifier
2024-10-08 09:49:02,458:INFO:Total runtime is 1.3780067483584086 minutes
2024-10-08 09:49:02,476:INFO:SubProcess create_model() called ==================================
2024-10-08 09:49:02,478:INFO:Initializing create_model()
2024-10-08 09:49:02,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:49:02,480:INFO:Checking exceptions
2024-10-08 09:49:02,480:INFO:Importing libraries
2024-10-08 09:49:02,480:INFO:Copying training dataset
2024-10-08 09:49:02,556:INFO:Defining folds
2024-10-08 09:49:02,558:INFO:Declaring metric variables
2024-10-08 09:49:02,576:INFO:Importing untrained model
2024-10-08 09:49:02,606:INFO:K Neighbors Classifier Imported successfully
2024-10-08 09:49:02,650:INFO:Starting cross validation
2024-10-08 09:49:02,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:49:27,663:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,682:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,690:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,728:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,733:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,753:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,760:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,799:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,802:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,822:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,831:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:27,870:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,411:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,474:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,486:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,503:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,545:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,556:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,569:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,586:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,625:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,648:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,710:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:42,802:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,516:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,558:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,611:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,711:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,752:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,804:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:49:55,915:INFO:Calculating mean and std
2024-10-08 09:49:55,919:INFO:Creating metrics dataframe
2024-10-08 09:49:55,925:INFO:Uploading results into container
2024-10-08 09:49:55,927:INFO:Uploading model into container now
2024-10-08 09:49:55,928:INFO:_master_model_container: 2
2024-10-08 09:49:55,928:INFO:_display_container: 2
2024-10-08 09:49:55,930:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-08 09:49:55,930:INFO:create_model() successfully completed......................................
2024-10-08 09:49:56,062:INFO:SubProcess create_model() end ==================================
2024-10-08 09:49:56,062:INFO:Creating metrics dataframe
2024-10-08 09:49:56,122:INFO:Initializing Naive Bayes
2024-10-08 09:49:56,123:INFO:Total runtime is 2.2724263628323875 minutes
2024-10-08 09:49:56,133:INFO:SubProcess create_model() called ==================================
2024-10-08 09:49:56,134:INFO:Initializing create_model()
2024-10-08 09:49:56,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:49:56,135:INFO:Checking exceptions
2024-10-08 09:49:56,135:INFO:Importing libraries
2024-10-08 09:49:56,136:INFO:Copying training dataset
2024-10-08 09:49:56,191:INFO:Defining folds
2024-10-08 09:49:56,191:INFO:Declaring metric variables
2024-10-08 09:49:56,198:INFO:Importing untrained model
2024-10-08 09:49:56,206:INFO:Naive Bayes Imported successfully
2024-10-08 09:49:56,226:INFO:Starting cross validation
2024-10-08 09:49:56,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:50:02,418:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,423:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,424:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,425:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,487:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,494:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,495:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,498:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,555:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,565:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,566:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:02,568:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,299:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,331:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,331:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,339:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,370:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,400:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,400:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,408:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,440:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,471:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,474:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:07,477:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,679:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,723:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,741:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,774:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,797:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,843:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:10,899:INFO:Calculating mean and std
2024-10-08 09:50:10,900:INFO:Creating metrics dataframe
2024-10-08 09:50:10,902:INFO:Uploading results into container
2024-10-08 09:50:10,903:INFO:Uploading model into container now
2024-10-08 09:50:10,903:INFO:_master_model_container: 3
2024-10-08 09:50:10,904:INFO:_display_container: 2
2024-10-08 09:50:10,904:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-08 09:50:10,904:INFO:create_model() successfully completed......................................
2024-10-08 09:50:11,025:INFO:SubProcess create_model() end ==================================
2024-10-08 09:50:11,026:INFO:Creating metrics dataframe
2024-10-08 09:50:11,056:INFO:Initializing Decision Tree Classifier
2024-10-08 09:50:11,056:INFO:Total runtime is 2.5213175694147747 minutes
2024-10-08 09:50:11,065:INFO:SubProcess create_model() called ==================================
2024-10-08 09:50:11,065:INFO:Initializing create_model()
2024-10-08 09:50:11,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:50:11,065:INFO:Checking exceptions
2024-10-08 09:50:11,066:INFO:Importing libraries
2024-10-08 09:50:11,066:INFO:Copying training dataset
2024-10-08 09:50:11,106:INFO:Defining folds
2024-10-08 09:50:11,107:INFO:Declaring metric variables
2024-10-08 09:50:11,115:INFO:Importing untrained model
2024-10-08 09:50:11,122:INFO:Decision Tree Classifier Imported successfully
2024-10-08 09:50:11,139:INFO:Starting cross validation
2024-10-08 09:50:11,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:50:16,993:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,023:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,029:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,029:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,064:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,092:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,102:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,103:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,134:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,162:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,171:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:17,173:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,457:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,521:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,537:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,550:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,597:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,607:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,620:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,635:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,667:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,689:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,705:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:22,772:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,283:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,330:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,387:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,437:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,483:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,523:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:26,582:INFO:Calculating mean and std
2024-10-08 09:50:26,584:INFO:Creating metrics dataframe
2024-10-08 09:50:26,586:INFO:Uploading results into container
2024-10-08 09:50:26,587:INFO:Uploading model into container now
2024-10-08 09:50:26,588:INFO:_master_model_container: 4
2024-10-08 09:50:26,589:INFO:_display_container: 2
2024-10-08 09:50:26,590:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-08 09:50:26,590:INFO:create_model() successfully completed......................................
2024-10-08 09:50:26,725:INFO:SubProcess create_model() end ==================================
2024-10-08 09:50:26,726:INFO:Creating metrics dataframe
2024-10-08 09:50:26,749:INFO:Initializing SVM - Linear Kernel
2024-10-08 09:50:26,749:INFO:Total runtime is 2.782857159773509 minutes
2024-10-08 09:50:26,756:INFO:SubProcess create_model() called ==================================
2024-10-08 09:50:26,757:INFO:Initializing create_model()
2024-10-08 09:50:26,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:50:26,757:INFO:Checking exceptions
2024-10-08 09:50:26,757:INFO:Importing libraries
2024-10-08 09:50:26,757:INFO:Copying training dataset
2024-10-08 09:50:26,799:INFO:Defining folds
2024-10-08 09:50:26,799:INFO:Declaring metric variables
2024-10-08 09:50:26,806:INFO:Importing untrained model
2024-10-08 09:50:26,814:INFO:SVM - Linear Kernel Imported successfully
2024-10-08 09:50:26,828:INFO:Starting cross validation
2024-10-08 09:50:26,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:50:34,728:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,733:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,740:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,798:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,801:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,804:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,811:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,869:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,871:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,874:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,880:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:34,942:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,708:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,751:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,791:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,822:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,831:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,861:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,894:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,905:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,974:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:42,988:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:43,062:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:43,130:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:47,598:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:47,666:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:47,735:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:47,958:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:48,043:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:48,084:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:48,140:INFO:Calculating mean and std
2024-10-08 09:50:48,142:INFO:Creating metrics dataframe
2024-10-08 09:50:48,143:INFO:Uploading results into container
2024-10-08 09:50:48,144:INFO:Uploading model into container now
2024-10-08 09:50:48,145:INFO:_master_model_container: 5
2024-10-08 09:50:48,145:INFO:_display_container: 2
2024-10-08 09:50:48,145:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-08 09:50:48,145:INFO:create_model() successfully completed......................................
2024-10-08 09:50:48,275:INFO:SubProcess create_model() end ==================================
2024-10-08 09:50:48,276:INFO:Creating metrics dataframe
2024-10-08 09:50:48,311:INFO:Initializing Ridge Classifier
2024-10-08 09:50:48,311:INFO:Total runtime is 3.1422324816385907 minutes
2024-10-08 09:50:48,321:INFO:SubProcess create_model() called ==================================
2024-10-08 09:50:48,322:INFO:Initializing create_model()
2024-10-08 09:50:48,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:50:48,322:INFO:Checking exceptions
2024-10-08 09:50:48,322:INFO:Importing libraries
2024-10-08 09:50:48,322:INFO:Copying training dataset
2024-10-08 09:50:48,360:INFO:Defining folds
2024-10-08 09:50:48,361:INFO:Declaring metric variables
2024-10-08 09:50:48,368:INFO:Importing untrained model
2024-10-08 09:50:48,373:INFO:Ridge Classifier Imported successfully
2024-10-08 09:50:48,382:INFO:Starting cross validation
2024-10-08 09:50:48,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:50:55,081:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,081:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,086:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,087:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,149:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,150:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,154:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,155:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,219:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,224:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:55,224:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,689:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,744:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,748:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,763:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,777:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,813:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,817:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,833:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,848:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,883:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,901:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:50:59,918:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:02,959:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:03,029:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:03,052:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:03,075:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:03,094:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:03,136:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:03,200:INFO:Calculating mean and std
2024-10-08 09:51:03,202:INFO:Creating metrics dataframe
2024-10-08 09:51:03,204:INFO:Uploading results into container
2024-10-08 09:51:03,205:INFO:Uploading model into container now
2024-10-08 09:51:03,205:INFO:_master_model_container: 6
2024-10-08 09:51:03,205:INFO:_display_container: 2
2024-10-08 09:51:03,206:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-08 09:51:03,207:INFO:create_model() successfully completed......................................
2024-10-08 09:51:03,323:INFO:SubProcess create_model() end ==================================
2024-10-08 09:51:03,324:INFO:Creating metrics dataframe
2024-10-08 09:51:03,342:INFO:Initializing Random Forest Classifier
2024-10-08 09:51:03,342:INFO:Total runtime is 3.3927523930867514 minutes
2024-10-08 09:51:03,355:INFO:SubProcess create_model() called ==================================
2024-10-08 09:51:03,357:INFO:Initializing create_model()
2024-10-08 09:51:03,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:51:03,358:INFO:Checking exceptions
2024-10-08 09:51:03,358:INFO:Importing libraries
2024-10-08 09:51:03,358:INFO:Copying training dataset
2024-10-08 09:51:03,394:INFO:Defining folds
2024-10-08 09:51:03,394:INFO:Declaring metric variables
2024-10-08 09:51:03,401:INFO:Importing untrained model
2024-10-08 09:51:03,406:INFO:Random Forest Classifier Imported successfully
2024-10-08 09:51:03,416:INFO:Starting cross validation
2024-10-08 09:51:03,423:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:51:20,186:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,190:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,196:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,230:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,256:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,259:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,266:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,300:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,325:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,331:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,336:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:20,369:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,334:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,360:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,406:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,437:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,516:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,575:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,691:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,709:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,768:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,789:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,838:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:36,859:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,731:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,766:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,795:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,824:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,839:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,879:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:45,950:INFO:Calculating mean and std
2024-10-08 09:51:45,952:INFO:Creating metrics dataframe
2024-10-08 09:51:45,955:INFO:Uploading results into container
2024-10-08 09:51:45,957:INFO:Uploading model into container now
2024-10-08 09:51:45,958:INFO:_master_model_container: 7
2024-10-08 09:51:45,958:INFO:_display_container: 2
2024-10-08 09:51:45,958:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-08 09:51:45,958:INFO:create_model() successfully completed......................................
2024-10-08 09:51:46,092:INFO:SubProcess create_model() end ==================================
2024-10-08 09:51:46,093:INFO:Creating metrics dataframe
2024-10-08 09:51:46,122:INFO:Initializing Quadratic Discriminant Analysis
2024-10-08 09:51:46,122:INFO:Total runtime is 4.105740662415823 minutes
2024-10-08 09:51:46,132:INFO:SubProcess create_model() called ==================================
2024-10-08 09:51:46,132:INFO:Initializing create_model()
2024-10-08 09:51:46,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:51:46,133:INFO:Checking exceptions
2024-10-08 09:51:46,133:INFO:Importing libraries
2024-10-08 09:51:46,133:INFO:Copying training dataset
2024-10-08 09:51:46,172:INFO:Defining folds
2024-10-08 09:51:46,173:INFO:Declaring metric variables
2024-10-08 09:51:46,179:INFO:Importing untrained model
2024-10-08 09:51:46,186:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-08 09:51:46,198:INFO:Starting cross validation
2024-10-08 09:51:46,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:51:53,286:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:51:53,286:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:51:53,288:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:51:53,288:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:51:55,269:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,270:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,271:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,271:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,339:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,340:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,342:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,351:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,407:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,408:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,412:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:55,420:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:51:59,905:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:51:59,995:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:52:00,117:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:52:00,197:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:52:01,790:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,839:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,865:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,894:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,910:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,921:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,942:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,962:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,979:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:01,990:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:02,030:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:02,068:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:04,774:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:52:04,819:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-08 09:52:05,647:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:05,668:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:05,692:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:05,707:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:05,730:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:05,745:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:05,801:INFO:Calculating mean and std
2024-10-08 09:52:05,802:INFO:Creating metrics dataframe
2024-10-08 09:52:05,804:INFO:Uploading results into container
2024-10-08 09:52:05,805:INFO:Uploading model into container now
2024-10-08 09:52:05,806:INFO:_master_model_container: 8
2024-10-08 09:52:05,806:INFO:_display_container: 2
2024-10-08 09:52:05,806:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-08 09:52:05,807:INFO:create_model() successfully completed......................................
2024-10-08 09:52:05,957:INFO:SubProcess create_model() end ==================================
2024-10-08 09:52:05,958:INFO:Creating metrics dataframe
2024-10-08 09:52:05,979:INFO:Initializing Ada Boost Classifier
2024-10-08 09:52:05,981:INFO:Total runtime is 4.436720097064972 minutes
2024-10-08 09:52:05,986:INFO:SubProcess create_model() called ==================================
2024-10-08 09:52:05,987:INFO:Initializing create_model()
2024-10-08 09:52:05,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:52:05,987:INFO:Checking exceptions
2024-10-08 09:52:05,987:INFO:Importing libraries
2024-10-08 09:52:05,988:INFO:Copying training dataset
2024-10-08 09:52:06,026:INFO:Defining folds
2024-10-08 09:52:06,026:INFO:Declaring metric variables
2024-10-08 09:52:06,036:INFO:Importing untrained model
2024-10-08 09:52:06,049:INFO:Ada Boost Classifier Imported successfully
2024-10-08 09:52:06,064:INFO:Starting cross validation
2024-10-08 09:52:06,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:52:09,846:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:09,859:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:09,860:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:09,919:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:19,089:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,160:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,166:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,231:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,238:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,249:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,281:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,304:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,318:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,352:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,397:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:19,430:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:22,878:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:23,043:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:23,139:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:23,233:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:32,079:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,163:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,213:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,222:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,234:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,288:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,292:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,356:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,367:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,374:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,493:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:32,569:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:34,886:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:35,043:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-08 09:52:40,601:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:40,643:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:40,684:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:40,728:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:40,769:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:40,807:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:52:40,861:INFO:Calculating mean and std
2024-10-08 09:52:40,862:INFO:Creating metrics dataframe
2024-10-08 09:52:40,865:INFO:Uploading results into container
2024-10-08 09:52:40,865:INFO:Uploading model into container now
2024-10-08 09:52:40,866:INFO:_master_model_container: 9
2024-10-08 09:52:40,866:INFO:_display_container: 2
2024-10-08 09:52:40,866:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-08 09:52:40,866:INFO:create_model() successfully completed......................................
2024-10-08 09:52:40,978:INFO:SubProcess create_model() end ==================================
2024-10-08 09:52:40,978:INFO:Creating metrics dataframe
2024-10-08 09:52:41,010:INFO:Initializing Gradient Boosting Classifier
2024-10-08 09:52:41,010:INFO:Total runtime is 5.020546591281891 minutes
2024-10-08 09:52:41,016:INFO:SubProcess create_model() called ==================================
2024-10-08 09:52:41,017:INFO:Initializing create_model()
2024-10-08 09:52:41,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:52:41,019:INFO:Checking exceptions
2024-10-08 09:52:41,019:INFO:Importing libraries
2024-10-08 09:52:41,019:INFO:Copying training dataset
2024-10-08 09:52:41,060:INFO:Defining folds
2024-10-08 09:52:41,060:INFO:Declaring metric variables
2024-10-08 09:52:41,067:INFO:Importing untrained model
2024-10-08 09:52:41,072:INFO:Gradient Boosting Classifier Imported successfully
2024-10-08 09:52:41,083:INFO:Starting cross validation
2024-10-08 09:52:41,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:53:08,707:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,707:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,707:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,711:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,777:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,777:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,778:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,785:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,847:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,848:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,848:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:08,854:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,751:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,793:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,808:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,822:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,844:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,864:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,880:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,889:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,912:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,934:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,950:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:36,981:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,058:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,101:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,123:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,141:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,163:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,203:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:53:54,260:INFO:Calculating mean and std
2024-10-08 09:53:54,262:INFO:Creating metrics dataframe
2024-10-08 09:53:54,264:INFO:Uploading results into container
2024-10-08 09:53:54,265:INFO:Uploading model into container now
2024-10-08 09:53:54,266:INFO:_master_model_container: 10
2024-10-08 09:53:54,266:INFO:_display_container: 2
2024-10-08 09:53:54,266:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-08 09:53:54,267:INFO:create_model() successfully completed......................................
2024-10-08 09:53:54,420:INFO:SubProcess create_model() end ==================================
2024-10-08 09:53:54,421:INFO:Creating metrics dataframe
2024-10-08 09:53:54,460:INFO:Initializing Linear Discriminant Analysis
2024-10-08 09:53:54,462:INFO:Total runtime is 6.244740931193034 minutes
2024-10-08 09:53:54,474:INFO:SubProcess create_model() called ==================================
2024-10-08 09:53:54,474:INFO:Initializing create_model()
2024-10-08 09:53:54,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:53:54,475:INFO:Checking exceptions
2024-10-08 09:53:54,475:INFO:Importing libraries
2024-10-08 09:53:54,475:INFO:Copying training dataset
2024-10-08 09:53:54,524:INFO:Defining folds
2024-10-08 09:53:54,524:INFO:Declaring metric variables
2024-10-08 09:53:54,534:INFO:Importing untrained model
2024-10-08 09:53:54,541:INFO:Linear Discriminant Analysis Imported successfully
2024-10-08 09:53:54,555:INFO:Starting cross validation
2024-10-08 09:53:54,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:54:03,528:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,530:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,533:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,535:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,597:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,598:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,602:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,603:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,669:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,669:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,672:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:03,673:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,116:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,174:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,224:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,239:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,246:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,246:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,293:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,310:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,316:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,319:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,381:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:12,386:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,267:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,308:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,312:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,351:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,352:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,426:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:17,494:INFO:Calculating mean and std
2024-10-08 09:54:17,495:INFO:Creating metrics dataframe
2024-10-08 09:54:17,497:INFO:Uploading results into container
2024-10-08 09:54:17,498:INFO:Uploading model into container now
2024-10-08 09:54:17,499:INFO:_master_model_container: 11
2024-10-08 09:54:17,499:INFO:_display_container: 2
2024-10-08 09:54:17,500:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-08 09:54:17,500:INFO:create_model() successfully completed......................................
2024-10-08 09:54:17,652:INFO:SubProcess create_model() end ==================================
2024-10-08 09:54:17,652:INFO:Creating metrics dataframe
2024-10-08 09:54:17,679:INFO:Initializing Extra Trees Classifier
2024-10-08 09:54:17,680:INFO:Total runtime is 6.631707918643952 minutes
2024-10-08 09:54:17,686:INFO:SubProcess create_model() called ==================================
2024-10-08 09:54:17,687:INFO:Initializing create_model()
2024-10-08 09:54:17,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:54:17,687:INFO:Checking exceptions
2024-10-08 09:54:17,688:INFO:Importing libraries
2024-10-08 09:54:17,688:INFO:Copying training dataset
2024-10-08 09:54:17,718:INFO:Defining folds
2024-10-08 09:54:17,719:INFO:Declaring metric variables
2024-10-08 09:54:17,726:INFO:Importing untrained model
2024-10-08 09:54:17,735:INFO:Extra Trees Classifier Imported successfully
2024-10-08 09:54:17,759:INFO:Starting cross validation
2024-10-08 09:54:17,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:54:36,014:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,060:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,122:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,130:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,149:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,234:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,235:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,254:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,266:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,326:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,333:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:36,451:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,345:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,377:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,426:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,447:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,530:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,586:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,745:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,783:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,816:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,851:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,886:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:54:54,922:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:04,298:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:04,561:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:04,565:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:04,663:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:04,664:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:04,731:INFO:Calculating mean and std
2024-10-08 09:55:04,734:INFO:Creating metrics dataframe
2024-10-08 09:55:04,737:INFO:Uploading results into container
2024-10-08 09:55:04,737:INFO:Uploading model into container now
2024-10-08 09:55:04,738:INFO:_master_model_container: 12
2024-10-08 09:55:04,738:INFO:_display_container: 2
2024-10-08 09:55:04,738:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-08 09:55:04,738:INFO:create_model() successfully completed......................................
2024-10-08 09:55:04,859:INFO:SubProcess create_model() end ==================================
2024-10-08 09:55:04,860:INFO:Creating metrics dataframe
2024-10-08 09:55:04,882:INFO:Initializing Light Gradient Boosting Machine
2024-10-08 09:55:04,882:INFO:Total runtime is 7.418413098653158 minutes
2024-10-08 09:55:04,896:INFO:SubProcess create_model() called ==================================
2024-10-08 09:55:04,896:INFO:Initializing create_model()
2024-10-08 09:55:04,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:55:04,897:INFO:Checking exceptions
2024-10-08 09:55:04,897:INFO:Importing libraries
2024-10-08 09:55:04,898:INFO:Copying training dataset
2024-10-08 09:55:04,944:INFO:Defining folds
2024-10-08 09:55:04,944:INFO:Declaring metric variables
2024-10-08 09:55:04,952:INFO:Importing untrained model
2024-10-08 09:55:04,960:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-08 09:55:04,973:INFO:Starting cross validation
2024-10-08 09:55:04,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:55:11,637:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,643:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,672:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,675:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,706:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,712:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,742:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,744:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,775:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,783:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,811:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:11,813:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,014:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,022:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,026:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,085:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,092:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,097:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,160:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,163:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,176:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,599:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,669:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:18,711:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,168:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,241:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,247:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,312:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,320:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,377:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:22,447:INFO:Calculating mean and std
2024-10-08 09:55:22,448:INFO:Creating metrics dataframe
2024-10-08 09:55:22,450:INFO:Uploading results into container
2024-10-08 09:55:22,451:INFO:Uploading model into container now
2024-10-08 09:55:22,452:INFO:_master_model_container: 13
2024-10-08 09:55:22,452:INFO:_display_container: 2
2024-10-08 09:55:22,452:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-08 09:55:22,453:INFO:create_model() successfully completed......................................
2024-10-08 09:55:22,588:INFO:SubProcess create_model() end ==================================
2024-10-08 09:55:22,588:INFO:Creating metrics dataframe
2024-10-08 09:55:22,621:INFO:Initializing Dummy Classifier
2024-10-08 09:55:22,622:INFO:Total runtime is 7.714075541496277 minutes
2024-10-08 09:55:22,635:INFO:SubProcess create_model() called ==================================
2024-10-08 09:55:22,636:INFO:Initializing create_model()
2024-10-08 09:55:22,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0DEBF10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:55:22,637:INFO:Checking exceptions
2024-10-08 09:55:22,637:INFO:Importing libraries
2024-10-08 09:55:22,638:INFO:Copying training dataset
2024-10-08 09:55:22,692:INFO:Defining folds
2024-10-08 09:55:22,692:INFO:Declaring metric variables
2024-10-08 09:55:22,698:INFO:Importing untrained model
2024-10-08 09:55:22,704:INFO:Dummy Classifier Imported successfully
2024-10-08 09:55:22,713:INFO:Starting cross validation
2024-10-08 09:55:22,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:55:26,898:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:26,912:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:26,923:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:26,933:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:26,966:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:26,981:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:26,991:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:27,000:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:27,004:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:27,019:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:27,029:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:27,033:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:27,038:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:27,048:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:27,059:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:27,066:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,149:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,180:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,195:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,199:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,217:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,248:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,256:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:31,263:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,267:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,286:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,287:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:31,302:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:31,307:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:31,317:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,331:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:31,336:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,436:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,455:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,488:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,518:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,524:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:34,555:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,556:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-08 09:55:34,579:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:55:34,667:INFO:Calculating mean and std
2024-10-08 09:55:34,668:INFO:Creating metrics dataframe
2024-10-08 09:55:34,672:INFO:Uploading results into container
2024-10-08 09:55:34,673:INFO:Uploading model into container now
2024-10-08 09:55:34,673:INFO:_master_model_container: 14
2024-10-08 09:55:34,674:INFO:_display_container: 2
2024-10-08 09:55:34,674:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-08 09:55:34,674:INFO:create_model() successfully completed......................................
2024-10-08 09:55:34,785:INFO:SubProcess create_model() end ==================================
2024-10-08 09:55:34,785:INFO:Creating metrics dataframe
2024-10-08 09:55:34,840:INFO:Initializing create_model()
2024-10-08 09:55:34,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:55:34,841:INFO:Checking exceptions
2024-10-08 09:55:34,843:INFO:Importing libraries
2024-10-08 09:55:34,844:INFO:Copying training dataset
2024-10-08 09:55:34,874:INFO:Defining folds
2024-10-08 09:55:34,875:INFO:Declaring metric variables
2024-10-08 09:55:34,875:INFO:Importing untrained model
2024-10-08 09:55:34,875:INFO:Declaring custom model
2024-10-08 09:55:34,876:INFO:Random Forest Classifier Imported successfully
2024-10-08 09:55:34,882:INFO:Cross validation set to False
2024-10-08 09:55:34,883:INFO:Fitting Model
2024-10-08 09:55:40,302:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-08 09:55:40,302:INFO:create_model() successfully completed......................................
2024-10-08 09:55:40,526:INFO:_master_model_container: 14
2024-10-08 09:55:40,527:INFO:_display_container: 2
2024-10-08 09:55:40,528:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-08 09:55:40,529:INFO:compare_models() successfully completed......................................
2024-10-08 09:56:34,382:INFO:Initializing create_model()
2024-10-08 09:56:34,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 09:56:34,383:INFO:Checking exceptions
2024-10-08 09:56:34,422:INFO:Importing libraries
2024-10-08 09:56:34,422:INFO:Copying training dataset
2024-10-08 09:56:34,490:INFO:Defining folds
2024-10-08 09:56:34,490:INFO:Declaring metric variables
2024-10-08 09:56:34,498:INFO:Importing untrained model
2024-10-08 09:56:34,509:INFO:Random Forest Classifier Imported successfully
2024-10-08 09:56:34,536:INFO:Starting cross validation
2024-10-08 09:56:34,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 09:56:50,506:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,630:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,783:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,818:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,847:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,911:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,941:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,947:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:50,986:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:51,022:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:51,025:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:56:51,094:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:06,986:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,038:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,125:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,142:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,158:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,197:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,224:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,256:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,351:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,366:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,439:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:07,512:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:15,817:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:15,932:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:15,995:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:16,008:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:16,061:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:16,133:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 09:57:16,247:INFO:Calculating mean and std
2024-10-08 09:57:16,251:INFO:Creating metrics dataframe
2024-10-08 09:57:16,267:INFO:Finalizing model
2024-10-08 09:57:22,005:INFO:Uploading results into container
2024-10-08 09:57:22,007:INFO:Uploading model into container now
2024-10-08 09:57:22,046:INFO:_master_model_container: 15
2024-10-08 09:57:22,047:INFO:_display_container: 3
2024-10-08 09:57:22,049:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-08 09:57:22,049:INFO:create_model() successfully completed......................................
2024-10-08 09:57:22,194:INFO:Initializing tune_model()
2024-10-08 09:57:22,195:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-08 09:57:22,195:INFO:Checking exceptions
2024-10-08 09:57:22,249:INFO:Copying training dataset
2024-10-08 09:57:22,290:INFO:Checking base model
2024-10-08 09:57:22,291:INFO:Base model : Random Forest Classifier
2024-10-08 09:57:22,301:INFO:Declaring metric variables
2024-10-08 09:57:22,310:INFO:Defining Hyperparameters
2024-10-08 09:57:22,442:INFO:Tuning with n_jobs=-1
2024-10-08 09:57:22,443:INFO:Initializing RandomizedSearchCV
2024-10-08 10:06:37,248:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-10-08 10:06:37,251:INFO:Hyperparameter search completed
2024-10-08 10:06:37,251:INFO:SubProcess create_model() called ==================================
2024-10-08 10:06:37,253:INFO:Initializing create_model()
2024-10-08 10:06:37,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000165C0F32650>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 190, 'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-10-08 10:06:37,255:INFO:Checking exceptions
2024-10-08 10:06:37,256:INFO:Importing libraries
2024-10-08 10:06:37,257:INFO:Copying training dataset
2024-10-08 10:06:37,376:INFO:Defining folds
2024-10-08 10:06:37,377:INFO:Declaring metric variables
2024-10-08 10:06:37,396:INFO:Importing untrained model
2024-10-08 10:06:37,397:INFO:Declaring custom model
2024-10-08 10:06:37,422:INFO:Random Forest Classifier Imported successfully
2024-10-08 10:06:37,481:INFO:Starting cross validation
2024-10-08 10:06:37,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 10:06:48,626:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,768:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,769:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,777:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,855:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,862:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,871:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,889:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,931:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,949:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:48,960:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:49,032:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,737:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,877:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,885:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,919:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,949:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,958:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:06:59,991:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:00,056:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:00,100:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:00,182:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:00,254:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:00,326:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,203:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,262:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,283:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,301:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,322:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,361:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:06,415:INFO:Calculating mean and std
2024-10-08 10:07:06,417:INFO:Creating metrics dataframe
2024-10-08 10:07:06,423:INFO:Finalizing model
2024-10-08 10:07:10,470:INFO:Uploading results into container
2024-10-08 10:07:10,472:INFO:Uploading model into container now
2024-10-08 10:07:10,475:INFO:_master_model_container: 16
2024-10-08 10:07:10,476:INFO:_display_container: 4
2024-10-08 10:07:10,479:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.001,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=190, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-10-08 10:07:10,480:INFO:create_model() successfully completed......................................
2024-10-08 10:07:10,627:INFO:SubProcess create_model() end ==================================
2024-10-08 10:07:10,628:INFO:choose_better activated
2024-10-08 10:07:10,634:INFO:SubProcess create_model() called ==================================
2024-10-08 10:07:10,636:INFO:Initializing create_model()
2024-10-08 10:07:10,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-08 10:07:10,637:INFO:Checking exceptions
2024-10-08 10:07:10,642:INFO:Importing libraries
2024-10-08 10:07:10,643:INFO:Copying training dataset
2024-10-08 10:07:10,685:INFO:Defining folds
2024-10-08 10:07:10,686:INFO:Declaring metric variables
2024-10-08 10:07:10,686:INFO:Importing untrained model
2024-10-08 10:07:10,686:INFO:Declaring custom model
2024-10-08 10:07:10,687:INFO:Random Forest Classifier Imported successfully
2024-10-08 10:07:10,687:INFO:Starting cross validation
2024-10-08 10:07:10,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-08 10:07:26,477:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,749:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,814:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,822:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,848:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,854:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,884:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,893:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,933:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,954:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:26,967:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:27,012:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,409:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,492:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,691:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,791:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,851:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,898:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,901:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,936:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,983:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:42,987:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:43,015:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:43,058:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:51,829:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:51,897:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:51,996:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:52,068:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:52,128:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:52,172:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-08 10:07:52,235:INFO:Calculating mean and std
2024-10-08 10:07:52,236:INFO:Creating metrics dataframe
2024-10-08 10:07:52,240:INFO:Finalizing model
2024-10-08 10:07:57,489:INFO:Uploading results into container
2024-10-08 10:07:57,490:INFO:Uploading model into container now
2024-10-08 10:07:57,491:INFO:_master_model_container: 17
2024-10-08 10:07:57,491:INFO:_display_container: 5
2024-10-08 10:07:57,492:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-08 10:07:57,492:INFO:create_model() successfully completed......................................
2024-10-08 10:07:57,616:INFO:SubProcess create_model() end ==================================
2024-10-08 10:07:57,617:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 1.0
2024-10-08 10:07:57,619:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.001,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=190, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.8467
2024-10-08 10:07:57,620:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-08 10:07:57,620:INFO:choose_better completed
2024-10-08 10:07:57,620:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-10-08 10:07:57,657:INFO:_master_model_container: 17
2024-10-08 10:07:57,657:INFO:_display_container: 4
2024-10-08 10:07:57,660:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-08 10:07:57,661:INFO:tune_model() successfully completed......................................
2024-10-08 10:07:57,795:INFO:Initializing evaluate_model()
2024-10-08 10:07:57,795:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-08 10:07:59,342:INFO:Initializing plot_model()
2024-10-08 10:07:59,344:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000165C0D6AC90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-08 10:07:59,344:INFO:Checking exceptions
2024-10-08 10:07:59,459:INFO:Preloading libraries
2024-10-08 10:07:59,598:INFO:Copying training dataset
2024-10-08 10:07:59,598:INFO:Plot type: pipeline
2024-10-08 10:08:01,762:INFO:Visual Rendered Successfully
2024-10-08 10:08:01,910:INFO:plot_model() successfully completed......................................
2024-10-10 21:38:29,470:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-10 21:38:29,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-10 21:38:29,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-10 21:38:29,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-10 21:38:49,588:INFO:PyCaret ClassificationExperiment
2024-10-10 21:38:49,589:INFO:Logging name: clf-default-name
2024-10-10 21:38:49,590:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-10 21:38:49,590:INFO:version 3.3.2
2024-10-10 21:38:49,590:INFO:Initializing setup()
2024-10-10 21:38:49,591:INFO:self.USI: d4eb
2024-10-10 21:38:49,591:INFO:self._variable_keys: {'logging_param', 'memory', 'pipeline', 'gpu_param', 'html_param', 'X_train', 'y_test', 'fix_imbalance', 'y_train', 'idx', 'USI', 'X_test', 'gpu_n_jobs_param', 'is_multiclass', 'exp_name_log', '_ml_usecase', 'exp_id', '_available_plots', 'log_plots_param', 'fold_shuffle_param', 'seed', 'fold_groups_param', 'target_param', 'n_jobs_param', 'y', 'data', 'X', 'fold_generator'}
2024-10-10 21:38:49,591:INFO:Checking environment
2024-10-10 21:38:49,592:INFO:python_version: 3.11.5
2024-10-10 21:38:49,592:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-10-10 21:38:49,592:INFO:machine: AMD64
2024-10-10 21:38:49,593:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-10 21:38:49,593:INFO:Memory: svmem(total=8472920064, available=1226805248, percent=85.5, used=7246114816, free=1226805248)
2024-10-10 21:38:49,594:INFO:Physical Core: 2
2024-10-10 21:38:49,594:INFO:Logical Core: 4
2024-10-10 21:38:49,594:INFO:Checking libraries
2024-10-10 21:38:49,595:INFO:System:
2024-10-10 21:38:49,595:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-10-10 21:38:49,595:INFO:executable: C:\Users\tejas\anaconda3\python.exe
2024-10-10 21:38:49,596:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-10 21:38:49,596:INFO:PyCaret required dependencies:
2024-10-10 21:39:06,478:INFO:                 pip: 23.2.1
2024-10-10 21:39:06,479:INFO:          setuptools: 68.0.0
2024-10-10 21:39:06,480:INFO:             pycaret: 3.3.2
2024-10-10 21:39:06,481:INFO:             IPython: 8.15.0
2024-10-10 21:39:06,481:INFO:          ipywidgets: 8.0.4
2024-10-10 21:39:06,481:INFO:                tqdm: 4.65.0
2024-10-10 21:39:06,482:INFO:               numpy: 1.24.3
2024-10-10 21:39:06,482:INFO:              pandas: 2.0.3
2024-10-10 21:39:06,483:INFO:              jinja2: 3.1.2
2024-10-10 21:39:06,484:INFO:               scipy: 1.11.1
2024-10-10 21:39:06,484:INFO:              joblib: 1.2.0
2024-10-10 21:39:06,485:INFO:             sklearn: 1.4.2
2024-10-10 21:39:06,487:INFO:                pyod: 2.0.1
2024-10-10 21:39:06,488:INFO:            imblearn: 0.12.3
2024-10-10 21:39:06,488:INFO:   category_encoders: 2.6.3
2024-10-10 21:39:06,488:INFO:            lightgbm: 4.4.0
2024-10-10 21:39:06,489:INFO:               numba: 0.57.1
2024-10-10 21:39:06,489:INFO:            requests: 2.31.0
2024-10-10 21:39:06,490:INFO:          matplotlib: 3.7.2
2024-10-10 21:39:06,490:INFO:          scikitplot: 0.3.7
2024-10-10 21:39:06,491:INFO:         yellowbrick: 1.5
2024-10-10 21:39:06,491:INFO:              plotly: 5.22.0
2024-10-10 21:39:06,492:INFO:    plotly-resampler: Not installed
2024-10-10 21:39:06,493:INFO:             kaleido: 0.2.1
2024-10-10 21:39:06,493:INFO:           schemdraw: 0.15
2024-10-10 21:39:06,494:INFO:         statsmodels: 0.14.0
2024-10-10 21:39:06,494:INFO:              sktime: 0.26.0
2024-10-10 21:39:06,495:INFO:               tbats: 1.1.3
2024-10-10 21:39:06,495:INFO:            pmdarima: 2.0.4
2024-10-10 21:39:06,495:INFO:              psutil: 5.9.0
2024-10-10 21:39:06,495:INFO:          markupsafe: 2.1.1
2024-10-10 21:39:06,496:INFO:             pickle5: Not installed
2024-10-10 21:39:06,496:INFO:         cloudpickle: 2.2.1
2024-10-10 21:39:06,496:INFO:         deprecation: 2.1.0
2024-10-10 21:39:06,496:INFO:              xxhash: 2.0.2
2024-10-10 21:39:06,497:INFO:           wurlitzer: Not installed
2024-10-10 21:39:06,497:INFO:PyCaret optional dependencies:
2024-10-10 21:39:06,554:INFO:                shap: Not installed
2024-10-10 21:39:06,555:INFO:           interpret: Not installed
2024-10-10 21:39:06,555:INFO:                umap: Not installed
2024-10-10 21:39:06,555:INFO:     ydata_profiling: 4.10.0
2024-10-10 21:39:06,555:INFO:  explainerdashboard: Not installed
2024-10-10 21:39:06,555:INFO:             autoviz: Not installed
2024-10-10 21:39:06,555:INFO:           fairlearn: Not installed
2024-10-10 21:39:06,555:INFO:          deepchecks: Not installed
2024-10-10 21:39:06,555:INFO:             xgboost: Not installed
2024-10-10 21:39:06,555:INFO:            catboost: Not installed
2024-10-10 21:39:06,556:INFO:              kmodes: Not installed
2024-10-10 21:39:06,556:INFO:             mlxtend: 0.23.1
2024-10-10 21:39:06,556:INFO:       statsforecast: Not installed
2024-10-10 21:39:06,556:INFO:        tune_sklearn: Not installed
2024-10-10 21:39:06,556:INFO:                 ray: Not installed
2024-10-10 21:39:06,556:INFO:            hyperopt: Not installed
2024-10-10 21:39:06,556:INFO:              optuna: Not installed
2024-10-10 21:39:06,556:INFO:               skopt: Not installed
2024-10-10 21:39:06,556:INFO:              mlflow: Not installed
2024-10-10 21:39:06,557:INFO:              gradio: Not installed
2024-10-10 21:39:06,557:INFO:             fastapi: Not installed
2024-10-10 21:39:06,557:INFO:             uvicorn: Not installed
2024-10-10 21:39:06,557:INFO:              m2cgen: Not installed
2024-10-10 21:39:06,557:INFO:           evidently: Not installed
2024-10-10 21:39:06,558:INFO:               fugue: Not installed
2024-10-10 21:39:06,558:INFO:           streamlit: Not installed
2024-10-10 21:39:06,558:INFO:             prophet: Not installed
2024-10-10 21:39:06,558:INFO:None
2024-10-10 21:39:06,558:INFO:Set up data.
2024-10-10 21:39:06,933:INFO:Set up folding strategy.
2024-10-10 21:39:06,933:INFO:Set up train/test split.
2024-10-10 21:39:07,178:INFO:Set up index.
2024-10-10 21:39:07,259:INFO:Assigning column types.
2024-10-10 21:39:07,320:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-10 21:39:07,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-10 21:39:07,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-10 21:39:08,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:08,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-10 21:39:09,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-10 21:39:09,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,172:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-10 21:39:09,286:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-10 21:39:09,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-10 21:39:09,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,482:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-10 21:39:09,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:09,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:10,243:INFO:Preparing preprocessing pipeline...
2024-10-10 21:39:10,273:INFO:Set up label encoding.
2024-10-10 21:39:10,273:INFO:Set up simple imputation.
2024-10-10 21:39:10,317:INFO:Set up encoding of ordinal features.
2024-10-10 21:39:10,334:INFO:Set up encoding of categorical features.
2024-10-10 21:39:10,338:INFO:Set up column name cleaning.
2024-10-10 21:39:15,815:INFO:Finished creating preprocessing pipeline.
2024-10-10 21:39:15,898:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\tejas\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['cap-diameter', 'stem-height',
                                             'stem-width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                    'stem-color',
                                                                    'veil-type',
                                                                    'veil-color',
                                                                    'ring-type',
                                                                    'spore-print-color',
                                                                    'habitat',
                                                                    'season'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-10 21:39:15,899:INFO:Creating final display dataframe.
2024-10-10 21:39:20,624:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type            Binary
3                Target mapping        e: 0, p: 1
4           Original data shape       (61069, 21)
5        Transformed data shape      (61069, 118)
6   Transformed train set shape      (42748, 118)
7    Transformed test set shape      (18321, 118)
8              Numeric features                 3
9          Categorical features                17
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              d4eb
2024-10-10 21:39:21,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:21,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:21,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:21,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-10 21:39:21,351:INFO:setup() successfully completed in 31.94s...............
2024-10-10 21:39:21,351:INFO:Initializing compare_models()
2024-10-10 21:39:21,351:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-10 21:39:21,351:INFO:Checking exceptions
2024-10-10 21:39:21,370:INFO:Preparing display monitor
2024-10-10 21:39:21,459:INFO:Initializing Logistic Regression
2024-10-10 21:39:21,460:INFO:Total runtime is 1.7913182576497397e-05 minutes
2024-10-10 21:39:21,470:INFO:SubProcess create_model() called ==================================
2024-10-10 21:39:21,471:INFO:Initializing create_model()
2024-10-10 21:39:21,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:39:21,472:INFO:Checking exceptions
2024-10-10 21:39:21,472:INFO:Importing libraries
2024-10-10 21:39:21,472:INFO:Copying training dataset
2024-10-10 21:39:21,518:INFO:Defining folds
2024-10-10 21:39:21,518:INFO:Declaring metric variables
2024-10-10 21:39:21,526:INFO:Importing untrained model
2024-10-10 21:39:21,532:INFO:Logistic Regression Imported successfully
2024-10-10 21:39:21,557:INFO:Starting cross validation
2024-10-10 21:39:21,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:40:11,947:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:11,949:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:12,069:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:12,084:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:12,176:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:12,199:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:13,640:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:13,718:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:13,788:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:13,799:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:13,870:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:13,948:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,562:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,626:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,650:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,709:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,731:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,795:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,844:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,918:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:34,996:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:35,431:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:35,501:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:35,569:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:49,799:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:49,853:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:49,912:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:49,940:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:49,980:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:50,018:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:40:50,080:INFO:Calculating mean and std
2024-10-10 21:40:50,082:INFO:Creating metrics dataframe
2024-10-10 21:40:50,121:INFO:Uploading results into container
2024-10-10 21:40:50,124:INFO:Uploading model into container now
2024-10-10 21:40:50,126:INFO:_master_model_container: 1
2024-10-10 21:40:50,126:INFO:_display_container: 2
2024-10-10 21:40:50,128:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-10 21:40:50,130:INFO:create_model() successfully completed......................................
2024-10-10 21:40:50,340:INFO:SubProcess create_model() end ==================================
2024-10-10 21:40:50,340:INFO:Creating metrics dataframe
2024-10-10 21:40:50,365:INFO:Initializing K Neighbors Classifier
2024-10-10 21:40:50,366:INFO:Total runtime is 1.4817814628283184 minutes
2024-10-10 21:40:50,380:INFO:SubProcess create_model() called ==================================
2024-10-10 21:40:50,381:INFO:Initializing create_model()
2024-10-10 21:40:50,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:40:50,382:INFO:Checking exceptions
2024-10-10 21:40:50,382:INFO:Importing libraries
2024-10-10 21:40:50,382:INFO:Copying training dataset
2024-10-10 21:40:50,451:INFO:Defining folds
2024-10-10 21:40:50,451:INFO:Declaring metric variables
2024-10-10 21:40:50,458:INFO:Importing untrained model
2024-10-10 21:40:50,464:INFO:K Neighbors Classifier Imported successfully
2024-10-10 21:40:50,475:INFO:Starting cross validation
2024-10-10 21:40:50,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:41:04,630:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,666:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,674:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,679:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,699:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,736:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,745:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,750:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,768:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,805:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,814:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:04,820:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,823:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,826:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,831:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,867:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,896:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,902:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,905:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,937:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,966:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,972:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:16,976:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:17,006:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,541:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,576:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,602:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,628:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,641:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,674:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:24,746:INFO:Calculating mean and std
2024-10-10 21:41:24,748:INFO:Creating metrics dataframe
2024-10-10 21:41:24,751:INFO:Uploading results into container
2024-10-10 21:41:24,752:INFO:Uploading model into container now
2024-10-10 21:41:24,754:INFO:_master_model_container: 2
2024-10-10 21:41:24,754:INFO:_display_container: 2
2024-10-10 21:41:24,754:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-10 21:41:24,755:INFO:create_model() successfully completed......................................
2024-10-10 21:41:24,885:INFO:SubProcess create_model() end ==================================
2024-10-10 21:41:24,885:INFO:Creating metrics dataframe
2024-10-10 21:41:24,902:INFO:Initializing Naive Bayes
2024-10-10 21:41:24,902:INFO:Total runtime is 2.057391107082367 minutes
2024-10-10 21:41:24,914:INFO:SubProcess create_model() called ==================================
2024-10-10 21:41:24,915:INFO:Initializing create_model()
2024-10-10 21:41:24,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:41:24,916:INFO:Checking exceptions
2024-10-10 21:41:24,916:INFO:Importing libraries
2024-10-10 21:41:24,916:INFO:Copying training dataset
2024-10-10 21:41:24,983:INFO:Defining folds
2024-10-10 21:41:24,983:INFO:Declaring metric variables
2024-10-10 21:41:24,994:INFO:Importing untrained model
2024-10-10 21:41:25,004:INFO:Naive Bayes Imported successfully
2024-10-10 21:41:25,025:INFO:Starting cross validation
2024-10-10 21:41:25,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:41:29,894:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:29,898:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:29,927:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:29,937:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:29,981:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:29,990:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:30,013:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:30,025:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:30,054:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:30,059:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:30,082:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:30,094:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,721:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,746:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,766:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,767:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,792:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,815:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,836:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,837:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,860:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,887:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,908:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:34,934:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,120:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,124:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,159:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,164:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,197:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,204:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:38,262:INFO:Calculating mean and std
2024-10-10 21:41:38,263:INFO:Creating metrics dataframe
2024-10-10 21:41:38,266:INFO:Uploading results into container
2024-10-10 21:41:38,267:INFO:Uploading model into container now
2024-10-10 21:41:38,267:INFO:_master_model_container: 3
2024-10-10 21:41:38,267:INFO:_display_container: 2
2024-10-10 21:41:38,267:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-10 21:41:38,267:INFO:create_model() successfully completed......................................
2024-10-10 21:41:38,381:INFO:SubProcess create_model() end ==================================
2024-10-10 21:41:38,382:INFO:Creating metrics dataframe
2024-10-10 21:41:38,403:INFO:Initializing Decision Tree Classifier
2024-10-10 21:41:38,403:INFO:Total runtime is 2.282414428393046 minutes
2024-10-10 21:41:38,409:INFO:SubProcess create_model() called ==================================
2024-10-10 21:41:38,411:INFO:Initializing create_model()
2024-10-10 21:41:38,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:41:38,412:INFO:Checking exceptions
2024-10-10 21:41:38,412:INFO:Importing libraries
2024-10-10 21:41:38,412:INFO:Copying training dataset
2024-10-10 21:41:38,460:INFO:Defining folds
2024-10-10 21:41:38,460:INFO:Declaring metric variables
2024-10-10 21:41:38,469:INFO:Importing untrained model
2024-10-10 21:41:38,479:INFO:Decision Tree Classifier Imported successfully
2024-10-10 21:41:38,497:INFO:Starting cross validation
2024-10-10 21:41:38,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:41:44,497:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,508:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,523:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,562:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,590:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,605:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,609:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,653:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,680:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,700:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,704:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:44,731:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:49,936:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:49,967:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,010:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,013:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,029:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,038:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,081:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,083:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,099:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,108:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,154:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:50,168:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,783:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,820:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,838:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,865:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,885:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,909:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:41:53,966:INFO:Calculating mean and std
2024-10-10 21:41:53,968:INFO:Creating metrics dataframe
2024-10-10 21:41:53,969:INFO:Uploading results into container
2024-10-10 21:41:53,970:INFO:Uploading model into container now
2024-10-10 21:41:53,970:INFO:_master_model_container: 4
2024-10-10 21:41:53,970:INFO:_display_container: 2
2024-10-10 21:41:53,971:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-10 21:41:53,971:INFO:create_model() successfully completed......................................
2024-10-10 21:41:54,086:INFO:SubProcess create_model() end ==================================
2024-10-10 21:41:54,087:INFO:Creating metrics dataframe
2024-10-10 21:41:54,117:INFO:Initializing SVM - Linear Kernel
2024-10-10 21:41:54,118:INFO:Total runtime is 2.544324827194214 minutes
2024-10-10 21:41:54,126:INFO:SubProcess create_model() called ==================================
2024-10-10 21:41:54,128:INFO:Initializing create_model()
2024-10-10 21:41:54,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:41:54,128:INFO:Checking exceptions
2024-10-10 21:41:54,128:INFO:Importing libraries
2024-10-10 21:41:54,129:INFO:Copying training dataset
2024-10-10 21:41:54,190:INFO:Defining folds
2024-10-10 21:41:54,190:INFO:Declaring metric variables
2024-10-10 21:41:54,203:INFO:Importing untrained model
2024-10-10 21:41:54,219:INFO:SVM - Linear Kernel Imported successfully
2024-10-10 21:41:54,246:INFO:Starting cross validation
2024-10-10 21:41:54,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:42:03,383:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,393:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,393:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,394:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,454:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,463:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,464:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,465:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,524:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,534:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,534:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:03,535:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:13,892:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:13,963:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:13,985:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,033:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,063:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,103:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,105:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,179:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,531:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,624:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:14,714:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,094:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,184:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,279:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,702:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,759:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,812:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:22,898:INFO:Calculating mean and std
2024-10-10 21:42:22,900:INFO:Creating metrics dataframe
2024-10-10 21:42:22,906:INFO:Uploading results into container
2024-10-10 21:42:22,907:INFO:Uploading model into container now
2024-10-10 21:42:22,908:INFO:_master_model_container: 5
2024-10-10 21:42:22,909:INFO:_display_container: 2
2024-10-10 21:42:22,910:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-10 21:42:22,910:INFO:create_model() successfully completed......................................
2024-10-10 21:42:23,111:INFO:SubProcess create_model() end ==================================
2024-10-10 21:42:23,111:INFO:Creating metrics dataframe
2024-10-10 21:42:23,126:INFO:Initializing Ridge Classifier
2024-10-10 21:42:23,126:INFO:Total runtime is 3.027795728047689 minutes
2024-10-10 21:42:23,132:INFO:SubProcess create_model() called ==================================
2024-10-10 21:42:23,133:INFO:Initializing create_model()
2024-10-10 21:42:23,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:42:23,134:INFO:Checking exceptions
2024-10-10 21:42:23,134:INFO:Importing libraries
2024-10-10 21:42:23,134:INFO:Copying training dataset
2024-10-10 21:42:23,180:INFO:Defining folds
2024-10-10 21:42:23,180:INFO:Declaring metric variables
2024-10-10 21:42:23,188:INFO:Importing untrained model
2024-10-10 21:42:23,199:INFO:Ridge Classifier Imported successfully
2024-10-10 21:42:23,220:INFO:Starting cross validation
2024-10-10 21:42:23,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:42:30,168:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,174:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,183:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,195:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,242:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,251:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,254:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,265:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,312:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,321:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,323:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:30,337:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,837:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,846:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,851:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,887:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,909:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,918:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,922:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,959:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,980:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,992:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:36,999:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:37,030:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,292:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,337:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,363:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,380:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,409:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,455:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:40,512:INFO:Calculating mean and std
2024-10-10 21:42:40,514:INFO:Creating metrics dataframe
2024-10-10 21:42:40,516:INFO:Uploading results into container
2024-10-10 21:42:40,517:INFO:Uploading model into container now
2024-10-10 21:42:40,517:INFO:_master_model_container: 6
2024-10-10 21:42:40,518:INFO:_display_container: 2
2024-10-10 21:42:40,518:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-10 21:42:40,518:INFO:create_model() successfully completed......................................
2024-10-10 21:42:40,629:INFO:SubProcess create_model() end ==================================
2024-10-10 21:42:40,630:INFO:Creating metrics dataframe
2024-10-10 21:42:40,655:INFO:Initializing Random Forest Classifier
2024-10-10 21:42:40,655:INFO:Total runtime is 3.319944004217784 minutes
2024-10-10 21:42:40,662:INFO:SubProcess create_model() called ==================================
2024-10-10 21:42:40,662:INFO:Initializing create_model()
2024-10-10 21:42:40,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:42:40,663:INFO:Checking exceptions
2024-10-10 21:42:40,663:INFO:Importing libraries
2024-10-10 21:42:40,663:INFO:Copying training dataset
2024-10-10 21:42:40,721:INFO:Defining folds
2024-10-10 21:42:40,721:INFO:Declaring metric variables
2024-10-10 21:42:40,728:INFO:Importing untrained model
2024-10-10 21:42:40,740:INFO:Random Forest Classifier Imported successfully
2024-10-10 21:42:40,756:INFO:Starting cross validation
2024-10-10 21:42:40,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:42:56,992:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:56,996:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,021:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,060:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,066:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,094:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,139:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,159:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,205:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,346:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,424:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:42:57,496:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,341:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,426:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,460:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,476:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,512:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,544:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,547:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,588:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,673:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,808:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,892:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:13,966:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:22,712:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:22,840:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:22,877:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:22,886:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:22,924:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:22,971:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:23,031:INFO:Calculating mean and std
2024-10-10 21:43:23,033:INFO:Creating metrics dataframe
2024-10-10 21:43:23,037:INFO:Uploading results into container
2024-10-10 21:43:23,039:INFO:Uploading model into container now
2024-10-10 21:43:23,039:INFO:_master_model_container: 7
2024-10-10 21:43:23,039:INFO:_display_container: 2
2024-10-10 21:43:23,040:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-10 21:43:23,040:INFO:create_model() successfully completed......................................
2024-10-10 21:43:23,155:INFO:SubProcess create_model() end ==================================
2024-10-10 21:43:23,155:INFO:Creating metrics dataframe
2024-10-10 21:43:23,171:INFO:Initializing Quadratic Discriminant Analysis
2024-10-10 21:43:23,171:INFO:Total runtime is 4.028533657391867 minutes
2024-10-10 21:43:23,181:INFO:SubProcess create_model() called ==================================
2024-10-10 21:43:23,181:INFO:Initializing create_model()
2024-10-10 21:43:23,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:43:23,181:INFO:Checking exceptions
2024-10-10 21:43:23,181:INFO:Importing libraries
2024-10-10 21:43:23,181:INFO:Copying training dataset
2024-10-10 21:43:23,234:INFO:Defining folds
2024-10-10 21:43:23,234:INFO:Declaring metric variables
2024-10-10 21:43:23,241:INFO:Importing untrained model
2024-10-10 21:43:23,250:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-10 21:43:23,268:INFO:Starting cross validation
2024-10-10 21:43:23,280:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:43:28,918:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:28,943:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:28,950:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:28,964:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:30,925:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:30,927:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:30,948:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:30,952:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,021:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,029:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,042:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,053:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,101:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,136:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,136:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:31,143:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:35,899:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:36,025:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:36,058:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:36,162:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:37,908:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:37,962:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:37,993:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,016:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,051:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,066:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,089:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,102:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,156:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,162:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,172:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:38,260:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:41,628:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:41,736:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-10 21:43:42,785:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:42,826:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:42,860:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:42,871:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:42,931:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:42,931:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:43,016:INFO:Calculating mean and std
2024-10-10 21:43:43,018:INFO:Creating metrics dataframe
2024-10-10 21:43:43,020:INFO:Uploading results into container
2024-10-10 21:43:43,021:INFO:Uploading model into container now
2024-10-10 21:43:43,021:INFO:_master_model_container: 8
2024-10-10 21:43:43,021:INFO:_display_container: 2
2024-10-10 21:43:43,022:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-10 21:43:43,022:INFO:create_model() successfully completed......................................
2024-10-10 21:43:43,135:INFO:SubProcess create_model() end ==================================
2024-10-10 21:43:43,135:INFO:Creating metrics dataframe
2024-10-10 21:43:43,158:INFO:Initializing Ada Boost Classifier
2024-10-10 21:43:43,158:INFO:Total runtime is 4.361657253901164 minutes
2024-10-10 21:43:43,165:INFO:SubProcess create_model() called ==================================
2024-10-10 21:43:43,166:INFO:Initializing create_model()
2024-10-10 21:43:43,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:43:43,166:INFO:Checking exceptions
2024-10-10 21:43:43,166:INFO:Importing libraries
2024-10-10 21:43:43,166:INFO:Copying training dataset
2024-10-10 21:43:43,197:INFO:Defining folds
2024-10-10 21:43:43,197:INFO:Declaring metric variables
2024-10-10 21:43:43,203:INFO:Importing untrained model
2024-10-10 21:43:43,208:INFO:Ada Boost Classifier Imported successfully
2024-10-10 21:43:43,217:INFO:Starting cross validation
2024-10-10 21:43:43,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:43:47,331:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:43:47,331:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:43:47,332:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:43:47,368:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:43:56,793:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,851:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,862:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,867:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,922:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,932:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,940:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,941:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:56,991:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:57,001:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:57,009:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:43:57,079:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:00,761:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:44:00,769:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:44:00,805:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:44:01,044:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:44:09,611:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,687:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,690:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,758:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,761:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,766:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,833:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,838:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,849:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,911:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,918:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:09,990:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:12,285:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:44:12,455:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-10 21:44:18,297:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:18,338:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:18,374:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:18,386:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:18,432:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:18,438:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:18,499:INFO:Calculating mean and std
2024-10-10 21:44:18,500:INFO:Creating metrics dataframe
2024-10-10 21:44:18,502:INFO:Uploading results into container
2024-10-10 21:44:18,503:INFO:Uploading model into container now
2024-10-10 21:44:18,503:INFO:_master_model_container: 9
2024-10-10 21:44:18,504:INFO:_display_container: 2
2024-10-10 21:44:18,504:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-10 21:44:18,504:INFO:create_model() successfully completed......................................
2024-10-10 21:44:18,635:INFO:SubProcess create_model() end ==================================
2024-10-10 21:44:18,635:INFO:Creating metrics dataframe
2024-10-10 21:44:18,662:INFO:Initializing Gradient Boosting Classifier
2024-10-10 21:44:18,662:INFO:Total runtime is 4.9533961653709415 minutes
2024-10-10 21:44:18,671:INFO:SubProcess create_model() called ==================================
2024-10-10 21:44:18,672:INFO:Initializing create_model()
2024-10-10 21:44:18,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:44:18,673:INFO:Checking exceptions
2024-10-10 21:44:18,673:INFO:Importing libraries
2024-10-10 21:44:18,673:INFO:Copying training dataset
2024-10-10 21:44:18,748:INFO:Defining folds
2024-10-10 21:44:18,749:INFO:Declaring metric variables
2024-10-10 21:44:18,771:INFO:Importing untrained model
2024-10-10 21:44:18,787:INFO:Gradient Boosting Classifier Imported successfully
2024-10-10 21:44:18,814:INFO:Starting cross validation
2024-10-10 21:44:18,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:44:48,041:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,056:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,073:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,094:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,113:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,126:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,143:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,168:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,182:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,196:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,212:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:44:48,238:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,274:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,288:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,310:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,347:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,360:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,395:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,418:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,435:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,515:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,534:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:16,610:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,590:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,630:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,635:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,672:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,675:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,720:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:34,781:INFO:Calculating mean and std
2024-10-10 21:45:34,782:INFO:Creating metrics dataframe
2024-10-10 21:45:34,784:INFO:Uploading results into container
2024-10-10 21:45:34,786:INFO:Uploading model into container now
2024-10-10 21:45:34,787:INFO:_master_model_container: 10
2024-10-10 21:45:34,787:INFO:_display_container: 2
2024-10-10 21:45:34,787:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-10 21:45:34,787:INFO:create_model() successfully completed......................................
2024-10-10 21:45:34,924:INFO:SubProcess create_model() end ==================================
2024-10-10 21:45:34,924:INFO:Creating metrics dataframe
2024-10-10 21:45:34,960:INFO:Initializing Linear Discriminant Analysis
2024-10-10 21:45:34,961:INFO:Total runtime is 6.225045327345531 minutes
2024-10-10 21:45:34,973:INFO:SubProcess create_model() called ==================================
2024-10-10 21:45:34,974:INFO:Initializing create_model()
2024-10-10 21:45:34,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:45:34,975:INFO:Checking exceptions
2024-10-10 21:45:34,975:INFO:Importing libraries
2024-10-10 21:45:34,976:INFO:Copying training dataset
2024-10-10 21:45:35,087:INFO:Defining folds
2024-10-10 21:45:35,087:INFO:Declaring metric variables
2024-10-10 21:45:35,096:INFO:Importing untrained model
2024-10-10 21:45:35,107:INFO:Linear Discriminant Analysis Imported successfully
2024-10-10 21:45:35,122:INFO:Starting cross validation
2024-10-10 21:45:35,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:45:43,039:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,040:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,074:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,111:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,111:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,128:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,144:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,180:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,181:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,198:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,212:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:43,268:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:50,945:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:50,946:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,006:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,017:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,018:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,018:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,075:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,087:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,089:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,144:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:51,157:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,183:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,187:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,243:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,246:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,286:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,287:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:45:56,364:INFO:Calculating mean and std
2024-10-10 21:45:56,366:INFO:Creating metrics dataframe
2024-10-10 21:45:56,368:INFO:Uploading results into container
2024-10-10 21:45:56,369:INFO:Uploading model into container now
2024-10-10 21:45:56,369:INFO:_master_model_container: 11
2024-10-10 21:45:56,369:INFO:_display_container: 2
2024-10-10 21:45:56,369:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-10 21:45:56,369:INFO:create_model() successfully completed......................................
2024-10-10 21:45:56,485:INFO:SubProcess create_model() end ==================================
2024-10-10 21:45:56,486:INFO:Creating metrics dataframe
2024-10-10 21:45:56,521:INFO:Initializing Extra Trees Classifier
2024-10-10 21:45:56,522:INFO:Total runtime is 6.5843821684519455 minutes
2024-10-10 21:45:56,532:INFO:SubProcess create_model() called ==================================
2024-10-10 21:45:56,533:INFO:Initializing create_model()
2024-10-10 21:45:56,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:45:56,534:INFO:Checking exceptions
2024-10-10 21:45:56,534:INFO:Importing libraries
2024-10-10 21:45:56,535:INFO:Copying training dataset
2024-10-10 21:45:56,586:INFO:Defining folds
2024-10-10 21:45:56,586:INFO:Declaring metric variables
2024-10-10 21:45:56,595:INFO:Importing untrained model
2024-10-10 21:45:56,604:INFO:Extra Trees Classifier Imported successfully
2024-10-10 21:45:56,622:INFO:Starting cross validation
2024-10-10 21:45:56,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:46:15,260:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,286:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,328:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,356:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,404:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,442:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,703:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,732:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,775:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,803:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,846:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:15,877:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,461:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,501:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,531:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,571:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,602:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,646:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,893:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,913:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,963:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:33,983:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:34,032:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:34,052:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,576:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,648:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,722:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,730:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,780:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,820:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:43,879:INFO:Calculating mean and std
2024-10-10 21:46:43,881:INFO:Creating metrics dataframe
2024-10-10 21:46:43,884:INFO:Uploading results into container
2024-10-10 21:46:43,885:INFO:Uploading model into container now
2024-10-10 21:46:43,886:INFO:_master_model_container: 12
2024-10-10 21:46:43,886:INFO:_display_container: 2
2024-10-10 21:46:43,887:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-10 21:46:43,887:INFO:create_model() successfully completed......................................
2024-10-10 21:46:44,009:INFO:SubProcess create_model() end ==================================
2024-10-10 21:46:44,009:INFO:Creating metrics dataframe
2024-10-10 21:46:44,031:INFO:Initializing Light Gradient Boosting Machine
2024-10-10 21:46:44,031:INFO:Total runtime is 7.376207013924917 minutes
2024-10-10 21:46:44,038:INFO:SubProcess create_model() called ==================================
2024-10-10 21:46:44,039:INFO:Initializing create_model()
2024-10-10 21:46:44,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:46:44,040:INFO:Checking exceptions
2024-10-10 21:46:44,040:INFO:Importing libraries
2024-10-10 21:46:44,040:INFO:Copying training dataset
2024-10-10 21:46:44,091:INFO:Defining folds
2024-10-10 21:46:44,091:INFO:Declaring metric variables
2024-10-10 21:46:44,101:INFO:Importing untrained model
2024-10-10 21:46:44,114:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-10 21:46:44,135:INFO:Starting cross validation
2024-10-10 21:46:44,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:46:50,429:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,444:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,474:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,487:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,498:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,514:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,542:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,557:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,566:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,583:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,611:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:50,626:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,894:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,902:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,926:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,932:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,964:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,970:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:56,996:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:57,002:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:57,036:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:57,040:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:57,066:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:46:57,072:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,037:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,063:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,115:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,138:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,166:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,191:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:01,259:INFO:Calculating mean and std
2024-10-10 21:47:01,260:INFO:Creating metrics dataframe
2024-10-10 21:47:01,263:INFO:Uploading results into container
2024-10-10 21:47:01,264:INFO:Uploading model into container now
2024-10-10 21:47:01,265:INFO:_master_model_container: 13
2024-10-10 21:47:01,265:INFO:_display_container: 2
2024-10-10 21:47:01,265:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-10 21:47:01,265:INFO:create_model() successfully completed......................................
2024-10-10 21:47:01,381:INFO:SubProcess create_model() end ==================================
2024-10-10 21:47:01,382:INFO:Creating metrics dataframe
2024-10-10 21:47:01,412:INFO:Initializing Dummy Classifier
2024-10-10 21:47:01,413:INFO:Total runtime is 7.665904378890992 minutes
2024-10-10 21:47:01,422:INFO:SubProcess create_model() called ==================================
2024-10-10 21:47:01,423:INFO:Initializing create_model()
2024-10-10 21:47:01,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B62098A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:47:01,424:INFO:Checking exceptions
2024-10-10 21:47:01,424:INFO:Importing libraries
2024-10-10 21:47:01,424:INFO:Copying training dataset
2024-10-10 21:47:01,490:INFO:Defining folds
2024-10-10 21:47:01,490:INFO:Declaring metric variables
2024-10-10 21:47:01,502:INFO:Importing untrained model
2024-10-10 21:47:01,511:INFO:Dummy Classifier Imported successfully
2024-10-10 21:47:01,533:INFO:Starting cross validation
2024-10-10 21:47:01,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:47:05,895:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:05,916:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:05,924:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:05,957:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:05,962:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:05,982:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:05,992:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:06,001:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:06,021:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:06,025:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:06,030:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:06,050:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:06,059:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:06,064:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:06,093:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,261:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,278:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,316:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,317:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,329:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,345:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,383:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:10,384:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,384:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:10,386:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,412:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,412:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,423:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:10,424:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:10,453:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:10,453:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,113:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,140:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,151:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,180:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:13,185:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,197:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,209:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-10 21:47:13,225:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:13,289:INFO:Calculating mean and std
2024-10-10 21:47:13,291:INFO:Creating metrics dataframe
2024-10-10 21:47:13,293:INFO:Uploading results into container
2024-10-10 21:47:13,295:INFO:Uploading model into container now
2024-10-10 21:47:13,295:INFO:_master_model_container: 14
2024-10-10 21:47:13,295:INFO:_display_container: 2
2024-10-10 21:47:13,296:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-10 21:47:13,296:INFO:create_model() successfully completed......................................
2024-10-10 21:47:13,423:INFO:SubProcess create_model() end ==================================
2024-10-10 21:47:13,423:INFO:Creating metrics dataframe
2024-10-10 21:47:13,486:INFO:Initializing create_model()
2024-10-10 21:47:13,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:47:13,487:INFO:Checking exceptions
2024-10-10 21:47:13,489:INFO:Importing libraries
2024-10-10 21:47:13,489:INFO:Copying training dataset
2024-10-10 21:47:13,543:INFO:Defining folds
2024-10-10 21:47:13,543:INFO:Declaring metric variables
2024-10-10 21:47:13,544:INFO:Importing untrained model
2024-10-10 21:47:13,545:INFO:Declaring custom model
2024-10-10 21:47:13,547:INFO:Random Forest Classifier Imported successfully
2024-10-10 21:47:13,573:INFO:Cross validation set to False
2024-10-10 21:47:13,573:INFO:Fitting Model
2024-10-10 21:47:19,132:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-10 21:47:19,132:INFO:create_model() successfully completed......................................
2024-10-10 21:47:19,384:INFO:_master_model_container: 14
2024-10-10 21:47:19,385:INFO:_display_container: 2
2024-10-10 21:47:19,386:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-10 21:47:19,387:INFO:compare_models() successfully completed......................................
2024-10-10 21:47:19,399:INFO:Initializing create_model()
2024-10-10 21:47:19,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:47:19,400:INFO:Checking exceptions
2024-10-10 21:47:19,463:INFO:Importing libraries
2024-10-10 21:47:19,463:INFO:Copying training dataset
2024-10-10 21:47:19,544:INFO:Defining folds
2024-10-10 21:47:19,546:INFO:Declaring metric variables
2024-10-10 21:47:19,557:INFO:Importing untrained model
2024-10-10 21:47:19,570:INFO:Random Forest Classifier Imported successfully
2024-10-10 21:47:19,600:INFO:Starting cross validation
2024-10-10 21:47:19,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:47:35,862:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:35,984:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,017:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,018:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,026:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,055:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,086:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,089:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,095:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,126:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,156:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:36,159:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,010:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,033:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,079:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,103:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,156:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,226:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,368:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,393:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,437:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,476:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,508:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:47:52,546:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:00,999:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:01,101:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:01,130:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:01,149:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:01,194:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:01,262:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:48:01,355:INFO:Calculating mean and std
2024-10-10 21:48:01,357:INFO:Creating metrics dataframe
2024-10-10 21:48:01,370:INFO:Finalizing model
2024-10-10 21:48:07,083:INFO:Uploading results into container
2024-10-10 21:48:07,084:INFO:Uploading model into container now
2024-10-10 21:48:07,129:INFO:_master_model_container: 15
2024-10-10 21:48:07,130:INFO:_display_container: 3
2024-10-10 21:48:07,136:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-10 21:48:07,136:INFO:create_model() successfully completed......................................
2024-10-10 21:48:07,309:INFO:Initializing tune_model()
2024-10-10 21:48:07,309:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-10 21:48:07,310:INFO:Checking exceptions
2024-10-10 21:48:07,373:INFO:Copying training dataset
2024-10-10 21:48:07,410:INFO:Checking base model
2024-10-10 21:48:07,410:INFO:Base model : Random Forest Classifier
2024-10-10 21:48:07,420:INFO:Declaring metric variables
2024-10-10 21:48:07,425:INFO:Defining Hyperparameters
2024-10-10 21:48:07,568:INFO:Tuning with n_jobs=-1
2024-10-10 21:48:07,569:INFO:Initializing RandomizedSearchCV
2024-10-10 21:57:33,843:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-10-10 21:57:33,845:INFO:Hyperparameter search completed
2024-10-10 21:57:33,845:INFO:SubProcess create_model() called ==================================
2024-10-10 21:57:33,847:INFO:Initializing create_model()
2024-10-10 21:57:33,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000026B5813C510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 190, 'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-10-10 21:57:33,848:INFO:Checking exceptions
2024-10-10 21:57:33,848:INFO:Importing libraries
2024-10-10 21:57:33,849:INFO:Copying training dataset
2024-10-10 21:57:33,899:INFO:Defining folds
2024-10-10 21:57:33,899:INFO:Declaring metric variables
2024-10-10 21:57:33,910:INFO:Importing untrained model
2024-10-10 21:57:33,911:INFO:Declaring custom model
2024-10-10 21:57:33,923:INFO:Random Forest Classifier Imported successfully
2024-10-10 21:57:33,944:INFO:Starting cross validation
2024-10-10 21:57:33,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:57:45,130:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,138:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,157:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,218:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,234:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,252:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,313:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,329:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,342:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,369:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,439:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:45,540:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,307:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,348:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,372:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,382:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,427:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,448:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,451:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,551:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,585:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,725:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,793:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:57:56,862:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,121:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,176:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,237:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,263:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,306:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,347:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:03,431:INFO:Calculating mean and std
2024-10-10 21:58:03,441:INFO:Creating metrics dataframe
2024-10-10 21:58:03,465:INFO:Finalizing model
2024-10-10 21:58:07,894:INFO:Uploading results into container
2024-10-10 21:58:07,896:INFO:Uploading model into container now
2024-10-10 21:58:07,901:INFO:_master_model_container: 16
2024-10-10 21:58:07,901:INFO:_display_container: 4
2024-10-10 21:58:07,903:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.001,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=190, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2024-10-10 21:58:07,903:INFO:create_model() successfully completed......................................
2024-10-10 21:58:08,053:INFO:SubProcess create_model() end ==================================
2024-10-10 21:58:08,053:INFO:choose_better activated
2024-10-10 21:58:08,059:INFO:SubProcess create_model() called ==================================
2024-10-10 21:58:08,061:INFO:Initializing create_model()
2024-10-10 21:58:08,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-10 21:58:08,061:INFO:Checking exceptions
2024-10-10 21:58:08,064:INFO:Importing libraries
2024-10-10 21:58:08,064:INFO:Copying training dataset
2024-10-10 21:58:08,108:INFO:Defining folds
2024-10-10 21:58:08,108:INFO:Declaring metric variables
2024-10-10 21:58:08,109:INFO:Importing untrained model
2024-10-10 21:58:08,109:INFO:Declaring custom model
2024-10-10 21:58:08,110:INFO:Random Forest Classifier Imported successfully
2024-10-10 21:58:08,110:INFO:Starting cross validation
2024-10-10 21:58:08,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-10 21:58:23,685:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:23,768:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:23,990:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,105:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,137:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,154:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,175:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,227:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,232:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,250:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,297:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:24,302:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:39,856:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:39,937:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,093:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,282:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,295:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,314:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,351:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,364:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,389:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,423:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,435:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:40,464:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,127:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,169:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,240:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,312:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,350:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,389:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'p') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-10 21:58:49,442:INFO:Calculating mean and std
2024-10-10 21:58:49,443:INFO:Creating metrics dataframe
2024-10-10 21:58:49,445:INFO:Finalizing model
2024-10-10 21:58:54,633:INFO:Uploading results into container
2024-10-10 21:58:54,634:INFO:Uploading model into container now
2024-10-10 21:58:54,635:INFO:_master_model_container: 17
2024-10-10 21:58:54,635:INFO:_display_container: 5
2024-10-10 21:58:54,635:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-10 21:58:54,636:INFO:create_model() successfully completed......................................
2024-10-10 21:58:54,762:INFO:SubProcess create_model() end ==================================
2024-10-10 21:58:54,764:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 1.0
2024-10-10 21:58:54,767:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.001,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=190, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.8467
2024-10-10 21:58:54,768:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-10 21:58:54,769:INFO:choose_better completed
2024-10-10 21:58:54,770:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-10-10 21:58:54,807:INFO:_master_model_container: 17
2024-10-10 21:58:54,807:INFO:_display_container: 4
2024-10-10 21:58:54,809:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-10 21:58:54,810:INFO:tune_model() successfully completed......................................
2024-10-10 21:58:54,960:INFO:Initializing evaluate_model()
2024-10-10 21:58:54,960:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-10 21:58:55,056:INFO:Initializing plot_model()
2024-10-10 21:58:55,057:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-10 21:58:55,057:INFO:Checking exceptions
2024-10-10 21:58:55,111:INFO:Preloading libraries
2024-10-10 21:58:55,163:INFO:Copying training dataset
2024-10-10 21:58:55,163:INFO:Plot type: pipeline
2024-10-10 21:58:57,187:INFO:Visual Rendered Successfully
2024-10-10 21:58:57,387:INFO:plot_model() successfully completed......................................
2024-10-10 21:59:46,336:INFO:Initializing plot_model()
2024-10-10 21:59:46,336:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-10 21:59:46,338:INFO:Checking exceptions
2024-10-10 21:59:46,399:INFO:Preloading libraries
2024-10-10 21:59:46,454:INFO:Copying training dataset
2024-10-10 21:59:46,454:INFO:Plot type: parameter
2024-10-10 21:59:46,461:INFO:Visual Rendered Successfully
2024-10-10 21:59:46,575:INFO:plot_model() successfully completed......................................
2024-10-10 22:07:10,103:INFO:Initializing plot_model()
2024-10-10 22:07:10,104:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026B580C9E90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-10 22:07:10,104:INFO:Checking exceptions
2024-10-10 22:07:10,183:INFO:Preloading libraries
2024-10-10 22:07:10,265:INFO:Copying training dataset
2024-10-10 22:07:10,266:INFO:Plot type: auc
2024-10-10 22:07:11,813:INFO:Fitting Model
2024-10-10 22:07:11,833:WARNING:C:\Users\tejas\anaconda3\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-10 22:07:11,835:INFO:Scoring test/hold-out set
2024-10-10 22:07:12,895:INFO:Visual Rendered Successfully
2024-10-10 22:07:13,037:INFO:plot_model() successfully completed......................................
